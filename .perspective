#s(persp--state-complete ("/Users/gcl/.emacs.d/site-lisp/config/init-key.el" "/Users/gcl/.emacs.d/my.keybindings" "/Users/gcl/.emacs.d/site-lisp/config/init-workspace.el" "/Users/gcl/.emacs.d/site-lisp/config/init.el" "/Users/gcl/.emacs.d/site-lisp/config/init-generic.el" "/Users/gcl/.emacs.d/site-lisp/config/init-indent.el" "/Users/gcl/github/vue/vue-next/packages/compiler-core/src/parse.ts" "/Users/gcl/github/mine/org-file-parser-with-js/README.md" "/Users/gcl/github/mine/org-file-parser-with-js/test/demo.org" "/Users/gcl/github/mine/org-file-parser-with-js/src/parse.ts" "/Users/gcl/github/mine/org-file-parser-with-js/src/ast.ts" "/Users/gcl/github/vue/vue-next/packages/compiler-core/src/ast.ts" "/Users/gcl/tmp/org.js" "/Users/gcl/github/mine/org-file-parser-with-js/src/as.t" "/Users/gcl/github/vue/vue-next/packages/compiler-core/src/utils.ts" "/Users/gcl/tmp/test/a.ts") (#s(persp--state-frame-v2 #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("main" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 1) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 56) (min-pixel-width . 70) (min-pixel-height-ignore . 14) (min-pixel-width-ignore . 14) (min-pixel-height-safe . 14) (min-pixel-width-safe . 14)) leaf (last . t) (pixel-width . 336) (pixel-height . 16) (total-width . 48) (total-height . 1) (normal-height . 1.0) (normal-width . 1.0) (buffer " *acm-doc-buffer*" (selected . t) (hscroll . 0) (fringes 0 0 t nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated . t) (point . 1) (start . 1)) (prev-buffers ("a.ts" 1 14)))))) ("main") nil) #s(persp--state-frame-v2 #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("main" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 1) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 56) (min-pixel-width . 70) (min-pixel-height-ignore . 14) (min-pixel-width-ignore . 14) (min-pixel-height-safe . 14) (min-pixel-width-safe . 14)) leaf (last . t) (pixel-width . 313) (pixel-height . 32) (total-width . 44) (total-height . 2) (normal-height . 1.0) (normal-width . 1.0) (buffer " *acm-buffer*" (selected . t) (hscroll . 0) (fringes 0 0 t nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated . t) (point . 1) (start . 1)))))) ("main") nil) #s(persp--state-frame-v2 #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("emacs" #s(persp--state-single ("init-key.el" "my.keybindings" "init-workspace.el" "init.el" "init-generic.el" "init-indent.el" "parse.ts<compiler-core>" "README.md" "demo.org" "parse.ts<org-file-parser-with-js>" "ast.ts<org-file-parser-with-js>" "ast.ts<compiler-core>" "org.js" "as.t" "utils.ts" "a.ts") (((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 76) (min-pixel-width . 160) (min-pixel-height-ignore . 38) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 19) (min-pixel-width-safe . 32)) hc (pixel-width . 1916) (pixel-height . 1057) (total-width . 240) (total-height . 56) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 956) (pixel-height . 1057) (total-width . 120) (total-height . 56) (normal-height . 1.0) (normal-width . 0.5) (buffer "init-key.el" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 18566) (start . 15738)) (prev-buffers ("init-key.el" 15738 18566) ("init-workspace.el" 1 150) ("init-generic.el" 1 828) ("init-indent.el" 793 1379) ("parse.ts<compiler-core>" 30783 31551) ("ast.ts<compiler-core>" 2791 3528) ("parse.ts<org-file-parser-with-js>" 1 1) ("utils.ts" 5630 6509) ("demo.org" 1 64))) (leaf (last . t) (pixel-width . 960) (pixel-height . 1057) (total-width . 120) (total-height . 56) (normal-height . 1.0) (normal-width . 0.5) (buffer "my.keybindings" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 544) (start . 1)) (prev-buffers ("init.el" 37 1569) ("init-workspace.el" 1 23))))) "org-file-parser" #s(persp--state-single ("demo.org") (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 76) (min-pixel-width . 80) (min-pixel-height-ignore . 38) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 19) (min-pixel-width-safe . 16)) leaf (pixel-width . 1916) (pixel-height . 1057) (total-width . 240) (total-height . 56) (normal-height . 1.0) (normal-width . 1.0) (buffer "demo.org" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 351) (start . 101)) (prev-buffers ("*scratch* (org-file-parser)" 1 1)))))) ("emacs" "org-file-parser") nil)))